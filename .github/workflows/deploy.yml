name: CI/CD Pipeline

on:
  push:
    branches:
      - prod

jobs:
  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to AWS ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and Push Backend Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.ECR_REGISTRY }}:eks-backend-prod-latest -f ./backend/Dockerfile --push ./backend

      - name: Build and Push Frontend Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.ECR_REGISTRY }}:eks-frontend-prod-latest -f ./frontend/Dockerfile --push ./frontend

  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}:eks-backend-prod-latest
            docker pull ${{ secrets.ECR_REGISTRY }}:eks-frontend-prod-latest
            docker stop backend || true && docker rm backend || true
            docker stop frontend || true && docker rm frontend || true
            cd home/ubuntu/
            docker-compose up
            
            # docker run -d --name backend -p 8000:8000 ${{ secrets.ECR_REGISTRY }}/backend:latest
            # docker run -d --name frontend -p 80:80 ${{ secrets.ECR_REGISTRY }}/frontend:latest
